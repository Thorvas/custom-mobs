plugins {
    id 'java-library'
    id 'maven-publish'
    id("io.papermc.paperweight.userdev") version "2.0.0-beta.17"
    id 'xyz.jpenilla.run-paper' version '2.3.1'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        url = uri('https://jitpack.io')
    }
    flatDir {
        dirs 'libs'
    }
}

// Konfiguracja wersji ProtocolLib
ext {
    protocolLibBuildNumber = "lastSuccessfulBuild" // lub konkretny numer np. "720"
    protocolLibUrl = "https://ci.dmulloy2.net/job/ProtocolLib/${protocolLibBuildNumber}/artifact/build/libs/ProtocolLib.jar"
}

runServer {
    minecraftVersion("1.21.6")

    downloadPlugins {
        // Użyj skonfigurowanego URL
        url(protocolLibUrl)
    }
}

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'mobs-plugin'
java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

dependencies {
    paperweight.paperDevBundle("1.21.6-R0.1-SNAPSHOT")

    // Fallback - użyj JitPack jeśli lokalny plik nie istnieje
    compileOnly 'com.github.dmulloy2:ProtocolLib:master-SNAPSHOT'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}